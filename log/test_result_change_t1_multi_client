[2017-10-23 16:57:52,658] da.api<MainProcess>:INFO: <Node_:d5001> initialized at 127.0.0.1:(UdpTransport=38163, TcpTransport=38139).
[2017-10-23 16:57:52,659] da.api<MainProcess>:INFO: Starting program <module 'olympus' from '/home/ubuntu/synced_async/constantine/src/olympus.py'>...
[2017-10-23 16:57:52,659] da.api<MainProcess>:INFO: Running iteration 1 ...
[2017-10-23 16:57:52,660] da.api<MainProcess>:INFO: Waiting for remaining child processes to terminate...(Press "Ctrl-C" to force kill)
[2017-10-23 16:57:52,697] olympus.Olympus<Olympus:20c02>:OUTPUT: Parsed config: {'num_client': 2, 'test_case_name': 'test_result_change_t1_multi_client', 'client_timeout': 3000, 'clients': {}, 'replicas': {}, 'nonhead_timeout': 3000, 'client_hosts': {'c1': 'localhost;', 'c0': 'localhost;'}, 'workloads': {'c1': ["put('jedi','luke skywalker')", "slice('jedi','0:4')", "get('jedi')"], 'c0': ["put('movie','star')", "get('movie')"]}, 'failures': {0: {'r1': {'c0': {'shuttle': {'0': ['change_result', '']}}}}}, 'replica_hosts': {'r4': '0', 'r3': '0', 'r0': '0', 'r1': '0', 'r2': '0'}, 't': 1, 'hosts': {0: 'localhost;'}, 'head_timeout': 3000}
[2017-10-23 16:57:52,725] olympus.Olympus<Olympus:20c02>:OUTPUT: Generated keys: {'private_keys': {'o1': <nacl.signing.SigningKey object at 0x7f448fab98d0>, 'r0': <nacl.signing.SigningKey object at 0x7f448fab9dd8>, 'r4': <nacl.signing.SigningKey object at 0x7f448fab9cc0>, 'r1': <nacl.signing.SigningKey object at 0x7f448fab9e48>, 'r2': <nacl.signing.SigningKey object at 0x7f448fab9eb8>, 'c1': <nacl.signing.SigningKey object at 0x7f448fab9048>, 'r3': <nacl.signing.SigningKey object at 0x7f448fab9d68>, 'c0': <nacl.signing.SigningKey object at 0x7f448fab9be0>}, 'public_keys': {'o1': b'48267b015758542cd03ed5c6484aa95da014bb12d810ca0f36b9a9a6b8790471', 'r0': b'aa06586d268fe94b07cac01942e338fae842c2a59361b521a2d153b29a0ba58f', 'r4': b'f9dd4cba2e2afaf8d3b0f3979ecb4f0b3a0ca8a0d724a186e714c4fea36f7943', 'r1': b'0922da5322b95adf0bddea9eacf199dc45f8409a1550e80344c9b85fa30852b6', 'r2': b'ba52b1ef842799e9e277d504a1e588e740aa93f269268a4f8f373cf66a9ad0d2', 'c1': b'09f80394db664ab058b82339a41aed677ce61ab661e1af26af9e36996c31f8e9', 'r3': b'736ab3995f0dedce39d266c34fdccc9ad7cf71dba8100cb730c93cf73e7a1dc3', 'c0': b'a2586dea8b24b5ce7ccbbff595663c1ac51b91460ea56168d0e3bebd9390a4f4'}}
[2017-10-23 16:57:52,871] client.Client<Client:20c03>:OUTPUT: c0  initialized with config= {'public_keys': {'o1': b'48267b015758542cd03ed5c6484aa95da014bb12d810ca0f36b9a9a6b8790471', 'r0': b'aa06586d268fe94b07cac01942e338fae842c2a59361b521a2d153b29a0ba58f', 'r4': b'f9dd4cba2e2afaf8d3b0f3979ecb4f0b3a0ca8a0d724a186e714c4fea36f7943', 'r1': b'0922da5322b95adf0bddea9eacf199dc45f8409a1550e80344c9b85fa30852b6', 'r2': b'ba52b1ef842799e9e277d504a1e588e740aa93f269268a4f8f373cf66a9ad0d2', 'c1': b'09f80394db664ab058b82339a41aed677ce61ab661e1af26af9e36996c31f8e9', 'r3': b'736ab3995f0dedce39d266c34fdccc9ad7cf71dba8100cb730c93cf73e7a1dc3', 'c0': b'a2586dea8b24b5ce7ccbbff595663c1ac51b91460ea56168d0e3bebd9390a4f4'}, 'id': 'c0', 'olympus': {'id': 'o1', 'process_id': <Olympus:20c02>}, 'private_key': <nacl.signing.SigningKey object at 0x7f448fac2978>, 'workload': ["put('movie','star')", "get('movie')"], 'replicas': {'r2': <Replica:20c07>, 'r3': <Replica:20c08>, 'r0': <Replica:20c05>, 'r4': <Replica:20c09>, 'r1': <Replica:20c06>}, 'client_timeout': 3.0, 'head_id': 'r0', 't': 1}
[2017-10-23 16:57:52,872] client.Client<Client:20c03>:OUTPUT: The following operation was created: {'id': 0, 'client_id': 'c0', 'command_string': "put('movie','star')"}
[2017-10-23 16:57:52,873] client.Client<Client:20c03>:OUTPUT: return_value= OK
[2017-10-23 16:57:52,875] client.Client<Client:20c04>:OUTPUT: c1  initialized with config= {'public_keys': {'o1': b'48267b015758542cd03ed5c6484aa95da014bb12d810ca0f36b9a9a6b8790471', 'r0': b'aa06586d268fe94b07cac01942e338fae842c2a59361b521a2d153b29a0ba58f', 'r4': b'f9dd4cba2e2afaf8d3b0f3979ecb4f0b3a0ca8a0d724a186e714c4fea36f7943', 'r1': b'0922da5322b95adf0bddea9eacf199dc45f8409a1550e80344c9b85fa30852b6', 'r2': b'ba52b1ef842799e9e277d504a1e588e740aa93f269268a4f8f373cf66a9ad0d2', 'c1': b'09f80394db664ab058b82339a41aed677ce61ab661e1af26af9e36996c31f8e9', 'r3': b'736ab3995f0dedce39d266c34fdccc9ad7cf71dba8100cb730c93cf73e7a1dc3', 'c0': b'a2586dea8b24b5ce7ccbbff595663c1ac51b91460ea56168d0e3bebd9390a4f4'}, 'id': 'c1', 'olympus': {'id': 'o1', 'process_id': <Olympus:20c02>}, 'private_key': <nacl.signing.SigningKey object at 0x7f448c0805f8>, 'workload': ["put('jedi','luke skywalker')", "slice('jedi','0:4')", "get('jedi')"], 'replicas': {'r2': <Replica:20c07>, 'r3': <Replica:20c08>, 'r0': <Replica:20c05>, 'r4': <Replica:20c09>, 'r1': <Replica:20c06>}, 'client_timeout': 3.0, 'head_id': 'r0', 't': 1}
[2017-10-23 16:57:52,876] client.Client<Client:20c03>:OUTPUT: A request for an operation was made {'content': {'is_retry': False, 'operation': {'id': 0, 'client_id': 'c0', 'command_string': "put('movie','star')"}}, 'signed_content': b'\x8d\x95\xe4\xe7\t\xc5wz:\x91\xcd\xa3I\x11e\xab\x16\xaf;&\x83U\xee^\xf5M\x01`\xbb0x\xc2\xf7=\xf06\xa5m\xe2\x0fVB1I\xc4\xc1\x9b\x8a2\x82\xf9\xca)o\x93\xac\x86B\xa70\x07O\xe7\x03{\'is_retry\': False, \'operation\': {\'id\': 0, \'client_id\': \'c0\', \'command_string\': "put(\'movie\',\'star\')"}}'}
[2017-10-23 16:57:52,878] replica.Replica<Replica:20c05>:OUTPUT: Received request message (source, client_id, operation_id, self_id)  c0 c0 0 r0
[2017-10-23 16:57:52,878] client.Client<Client:20c04>:OUTPUT: The following operation was created: {'id': 0, 'client_id': 'c1', 'command_string': "put('jedi','luke skywalker')"}
[2017-10-23 16:57:52,878] client.Client<Client:20c04>:OUTPUT: return_value= OK
[2017-10-23 16:57:52,882] client.Client<Client:20c04>:OUTPUT: A request for an operation was made {'content': {'is_retry': False, 'operation': {'id': 0, 'client_id': 'c1', 'command_string': "put('jedi','luke skywalker')"}}, 'signed_content': b'\xffUm<\xea\x7f\xe4\x8c\xf4\xce\x05\xb9\xea\xde\xa7\xf1n8\xde\xf2\xa9\xf9\xee;\xb3\x82\x06\xb7zw\x96\x803\x07\xf5\x94$\x197\x19>\xc1\xb9g\xaek\xdc\xce\x90%\x85\x17G\xb3,\xf3\xfc\n\xf2\xc9\x9b\xb7!\x03{\'is_retry\': False, \'operation\': {\'id\': 0, \'client_id\': \'c1\', \'command_string\': "put(\'jedi\',\'luke skywalker\')"}}'}
[2017-10-23 16:57:52,883] replica.Replica<Replica:20c06>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r0 c0 0 r1
[2017-10-23 16:57:52,884] replica.Replica<Replica:20c05>:OUTPUT: Received request message (source, client_id, operation_id, self_id)  c1 c1 0 r0
[2017-10-23 16:57:52,884] replica.Replica<Replica:20c05>:OUTPUT: Head is processing request (operation_id, client_id) (0, 'c1')
[2017-10-23 16:57:52,884] replica.Replica<Replica:20c06>:OUTPUT: Failure trigger updated (failure_trigger, failure, replica_id) shuttle ['change_result', ''] r1
[2017-10-23 16:57:52,888] replica.Replica<Replica:20c07>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r1 c0 0 r2
[2017-10-23 16:57:52,890] replica.Replica<Replica:20c06>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r0 c1 0 r1
[2017-10-23 16:57:52,894] replica.Replica<Replica:20c08>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r2 c0 0 r3
[2017-10-23 16:57:52,898] replica.Replica<Replica:20c07>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r1 c1 0 r2
[2017-10-23 16:57:52,899] replica.Replica<Replica:20c09>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r3 c0 0 r4
[2017-10-23 16:57:52,901] replica.Replica<Replica:20c08>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r2 c1 0 r3
[2017-10-23 16:57:52,906] replica.Replica<Replica:20c08>:OUTPUT: A signature mismatch occurred from source: r4
[2017-10-23 16:57:52,910] client.Client<Client:20c03>:OUTPUT: A result was received from replica= r4
[2017-10-23 16:57:52,911] client.Client<Client:20c03>:OUTPUT: The operation result pair is= {'id': 0, 'client_id': 'c0', 'command_string': "put('movie','star')"} OK
[2017-10-23 16:57:52,911] client.Client<Client:20c03>:OUTPUT: The result received is valid:(result, operation)= OK {'id': 0, 'client_id': 'c0', 'command_string': "put('movie','star')"}
[2017-10-23 16:57:52,911] client.Client<Client:20c03>:OUTPUT: The following operation was created: {'id': 1, 'client_id': 'c0', 'command_string': "get('movie')"}
[2017-10-23 16:57:52,912] client.Client<Client:20c03>:OUTPUT: return_value= star
[2017-10-23 16:57:52,912] client.Client<Client:20c03>:OUTPUT: A request for an operation was made {'content': {'is_retry': False, 'operation': {'id': 1, 'client_id': 'c0', 'command_string': "get('movie')"}}, 'signed_content': b'qz\xaa\xa5E\x02\x1f\xd0\xae\xe54\x870I\xb4\xd7\xfa\x06vD$\x85\x98\xd9\xd8_e\x04\x04l\xb3\x81\xd71\xe43\r~\xb1\xbbg\xdd<\x83V\xdc\x02\x86\xf3f\x857\xca"q\x11w\x1aRu\x976\x00\x0e{\'is_retry\': False, \'operation\': {\'id\': 1, \'client_id\': \'c0\', \'command_string\': "get(\'movie\')"}}'}
[2017-10-23 16:57:52,913] replica.Replica<Replica:20c09>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r3 c1 0 r4
[2017-10-23 16:57:52,915] replica.Replica<Replica:20c05>:OUTPUT: Received request message (source, client_id, operation_id, self_id)  c0 c0 1 r0
[2017-10-23 16:57:52,916] replica.Replica<Replica:20c05>:OUTPUT: Head is processing request (operation_id, client_id) (1, 'c0')
[2017-10-23 16:57:52,918] replica.Replica<Replica:20c08>:OUTPUT: A signature mismatch occurred from source: r4
[2017-10-23 16:57:52,920] client.Client<Client:20c04>:OUTPUT: A result was received from replica= r4
[2017-10-23 16:57:52,921] client.Client<Client:20c04>:OUTPUT: The operation result pair is= {'id': 0, 'client_id': 'c1', 'command_string': "put('jedi','luke skywalker')"} OK
[2017-10-23 16:57:52,921] client.Client<Client:20c04>:OUTPUT: The result received is valid:(result, operation)= OK {'id': 0, 'client_id': 'c1', 'command_string': "put('jedi','luke skywalker')"}
[2017-10-23 16:57:52,921] client.Client<Client:20c04>:OUTPUT: The following operation was created: {'id': 1, 'client_id': 'c1', 'command_string': "slice('jedi','0:4')"}
[2017-10-23 16:57:52,922] client.Client<Client:20c04>:OUTPUT: return_value= OK
[2017-10-23 16:57:52,923] replica.Replica<Replica:20c06>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r0 c0 1 r1
[2017-10-23 16:57:52,927] client.Client<Client:20c04>:OUTPUT: A request for an operation was made {'content': {'is_retry': False, 'operation': {'id': 1, 'client_id': 'c1', 'command_string': "slice('jedi','0:4')"}}, 'signed_content': b'$\x9b\xbc\xe5\xa26\xce\x13\x99\x9f\x96u\x10{\x15\xe6\xa7\xdeu\xe1\x1a\xfc\xbf\xb0\x96~\x13U\x16\x05\x0crV6\xe5S\xdbD\xf5G\xc0\x9e\x0e[\xd4\x06j\xebD\t@\\O\x00\xb4M.\xfb{P7D\xea\x0c{\'is_retry\': False, \'operation\': {\'id\': 1, \'client_id\': \'c1\', \'command_string\': "slice(\'jedi\',\'0:4\')"}}'}
[2017-10-23 16:57:52,927] replica.Replica<Replica:20c05>:OUTPUT: Received request message (source, client_id, operation_id, self_id)  c1 c1 1 r0
[2017-10-23 16:57:52,928] replica.Replica<Replica:20c05>:OUTPUT: Head is processing request (operation_id, client_id) (1, 'c1')
[2017-10-23 16:57:52,929] replica.Replica<Replica:20c06>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r0 c1 1 r1
[2017-10-23 16:57:52,935] replica.Replica<Replica:20c07>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r1 c0 1 r2
[2017-10-23 16:57:52,937] replica.Replica<Replica:20c07>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r1 c1 1 r2
[2017-10-23 16:57:52,939] replica.Replica<Replica:20c08>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r2 c0 1 r3
[2017-10-23 16:57:52,942] replica.Replica<Replica:20c08>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r2 c1 1 r3
[2017-10-23 16:57:52,943] replica.Replica<Replica:20c09>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r3 c0 1 r4
[2017-10-23 16:57:52,947] client.Client<Client:20c03>:OUTPUT: A result was received from replica= r4
[2017-10-23 16:57:52,948] replica.Replica<Replica:20c09>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r3 c1 1 r4
[2017-10-23 16:57:52,949] client.Client<Client:20c03>:OUTPUT: The operation result pair is= {'id': 1, 'client_id': 'c0', 'command_string': "get('movie')"} star
[2017-10-23 16:57:52,949] client.Client<Client:20c03>:OUTPUT: The result received is valid:(result, operation)= star {'id': 1, 'client_id': 'c0', 'command_string': "get('movie')"}
[2017-10-23 16:57:52,949] client.Client<Client:20c03>:OUTPUT: ~~~~~~~~~~Final state: {'movie': 'star'}
[2017-10-23 16:57:52,949] client.Client<Client:20c03>:OUTPUT: Requesting shared object from head:
[2017-10-23 16:57:52,950] replica.Replica<Replica:20c05>:OUTPUT: Received shared_object_request from client= c0
[2017-10-23 16:57:52,954] client.Client<Client:20c03>:OUTPUT: Received shared object from head =  {'jedi': 'luke', 'movie': 'star'}
[2017-10-23 16:57:52,954] client.Client<Client:20c03>:OUTPUT: Final results are consistent
[2017-10-23 16:57:52,956] replica.Replica<Replica:20c08>:OUTPUT: A signature mismatch occurred from source: r4
[2017-10-23 16:57:52,959] client.Client<Client:20c04>:OUTPUT: A result was received from replica= r4
[2017-10-23 16:57:52,960] client.Client<Client:20c04>:OUTPUT: The operation result pair is= {'id': 1, 'client_id': 'c1', 'command_string': "slice('jedi','0:4')"} OK
[2017-10-23 16:57:52,961] client.Client<Client:20c04>:OUTPUT: The result received is valid:(result, operation)= OK {'id': 1, 'client_id': 'c1', 'command_string': "slice('jedi','0:4')"}
[2017-10-23 16:57:52,961] client.Client<Client:20c04>:OUTPUT: The following operation was created: {'id': 2, 'client_id': 'c1', 'command_string': "get('jedi')"}
[2017-10-23 16:57:52,961] client.Client<Client:20c04>:OUTPUT: return_value= luke
[2017-10-23 16:57:52,962] client.Client<Client:20c04>:OUTPUT: A request for an operation was made {'content': {'is_retry': False, 'operation': {'id': 2, 'client_id': 'c1', 'command_string': "get('jedi')"}}, 'signed_content': b'L\xf6D\xad\x7f\xf1\xd0"l\x8d\xe6\x18UN\xeb\x91\x89%\x8a\x85\xb9d\xbc1<\xdd\x0ft|\x12$\x86+k\xa74O\xf2L\xc7/\xba\x18\x0fD\xdf&\xe0\xb9\x93\xcf4\xc0\xaa\xb8{\xef{\xb3\x03\xcc\xe2>\n{\'is_retry\': False, \'operation\': {\'id\': 2, \'client_id\': \'c1\', \'command_string\': "get(\'jedi\')"}}'}
[2017-10-23 16:57:52,963] replica.Replica<Replica:20c05>:OUTPUT: Received request message (source, client_id, operation_id, self_id)  c1 c1 2 r0
[2017-10-23 16:57:52,964] replica.Replica<Replica:20c05>:OUTPUT: Head is processing request (operation_id, client_id) (2, 'c1')
[2017-10-23 16:57:52,966] replica.Replica<Replica:20c06>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r0 c1 2 r1
[2017-10-23 16:57:52,968] replica.Replica<Replica:20c07>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r1 c1 2 r2
[2017-10-23 16:57:52,970] replica.Replica<Replica:20c08>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r2 c1 2 r3
[2017-10-23 16:57:52,975] replica.Replica<Replica:20c09>:OUTPUT: Received shuttle (source, client_id, operation_id, self_id)  r3 c1 2 r4
[2017-10-23 16:57:52,981] replica.Replica<Replica:20c08>:OUTPUT: A signature mismatch occurred from source: r4
[2017-10-23 16:57:52,995] client.Client<Client:20c04>:OUTPUT: A result was received from replica= r4
[2017-10-23 16:57:52,996] client.Client<Client:20c04>:OUTPUT: The operation result pair is= {'id': 2, 'client_id': 'c1', 'command_string': "get('jedi')"} luke
[2017-10-23 16:57:52,997] client.Client<Client:20c04>:OUTPUT: The result received is valid:(result, operation)= luke {'id': 2, 'client_id': 'c1', 'command_string': "get('jedi')"}
[2017-10-23 16:57:52,997] client.Client<Client:20c04>:OUTPUT: ~~~~~~~~~~Final state: {'jedi': 'luke'}
[2017-10-23 16:57:52,997] client.Client<Client:20c04>:OUTPUT: Requesting shared object from head:
[2017-10-23 16:57:52,998] replica.Replica<Replica:20c05>:OUTPUT: Received shared_object_request from client= c1
[2017-10-23 16:57:53,000] client.Client<Client:20c04>:OUTPUT: Received shared object from head =  {'jedi': 'luke', 'movie': 'star'}
[2017-10-23 16:57:53,001] client.Client<Client:20c04>:OUTPUT: Final results are consistent
[2017-10-23 16:57:55,150] da.api<MainProcess>:WARNING: Received keyboard interrupt. 
